Selecting documents using comparison query operators
Mathmatical operation

$eq – select documents where the value of a field is equal to a specified value.
$ne – select documents where the value of a field is not equal to a specified value.

$gt – select documents where the value of a field is greater than a specified value.
$gte – select documents where the value of a field is greater than or equal to a specified value.

$lt – select documents where the value of a field is less than a specified value.
$lte – select documents where the value of a field is less than or equal to a specified value.

$in – select documents where the value of a field equals any value in an array
$nin – select documents where the value of a field doesn’t equal any value in an array

--------------------------
db.users.find({})
db.users.find({age:{$eq:22}})
db.users.find({age:{$eq:35}})

db.sales.find({item:{$eq:"Americanos"}})

db.orders.find({})
db.orders.find({customer:{$eq:"John Doe"}})
db.sales.find({size:{$eq:"Tall"}})
db.sales.find({quantity:{$eq:12}})

db.products.find({})
db.products.find({price:{$eq:899}})
-------------
NOT EQUAL TO:

db.products.find({price:{$ne:899}})
-------------
db.users.find({age:{$gt:22}})
db.products.find({price:{$gt:599}})
db.orders.find({orderAmount:{$gt:250}})
db.sales.find({quantity:{$gt:15}})
db.products.find({"spec.ram":{$gte:8}})
db.products.find({"spec.screen":{$gte:5.5}})
db.products.find({})
db.products.find({"spec.cpu":{$gt:2}})
db.products.find({"storage":{$gt:64}})
-----------------------
Less Than
db.users.find({})
db.users.find({age:{$lt:30}})
db.users.find({age:{$lt:20}})
db.sales.find({})
db.sales.find({price:{$lt:20}})
db.sales.find({quantity:{$lt:25}})
db.orders.find({})
db.orders.find({orderAmount:{$lt:300}})
db.orders.find({orderAmount:{$lt:400}})
db.products.find({})
db.products.find({price:{$lt:800}})
db.products.find({"spec.ram":{$lt:8}})
db.products.find({"storage":{$lt:128}})
db.users.find({})
db.users.find({age:{$lte:40}})
db.sales.find({})
db.sales.find({price:{$lte:20}})
db.sales.find({quantity:{$lte:25}})
db.orders.find({})
db.orders.find({orderAmount:{$lte:300}})
db.orders.find({orderAmount:{$lte:200}})
db.products.find({})
db.products.find({price:{$lte:699}})
db.products.find({"spec.ram":{$lte:8}})
db.products.find({"spec.cpu":{$lte:2}})
db.products.find({"storage":{$lte:128}})
---------------------
db.users.find({age:{$in:[22,40]}})
db.users.find({})
db.sales.find({})
db.sales.find({item:{$in:["Lattes","Cappuccino","xyz"]}})
db.users.find({name:{$in:["Michael","Bob","Charlie"]}})
db.users.find({name:{$in:["Charlie","abc"]}})
db.users.find({age:{$in:[28,34,42]}})
db.sales.find({})
db.sales.find({size:{$in:["Short","Tall"]}})
db.sales.find({quantity:{$in:[22,12,30]}})
db.sales.find({item:{$in:["Lattes","Mochas"]}})
db.orders.find({})
db.orders.find({customer:{$in:["John Doe","Jane Smith"]}})
db.orders.find({orderAmount:{$in:[120,250]}})
db.products.find({})
db.products.find({name:{$in:["xPhone","xTablet"]}})
db.products.find({"color":{$in:["white","black"]}})
-----------------------------------------------
db.users.find({})
db.users.find({name:{$nin:["Eve","Bob"]}})
db.users.find({age:{$nin:["25","31"]}})
db.sales.find({})
db.sales.find({item:{$nin:["Lattes","Mochas"]}})
db.sales.find({size:{$nin:["Grande"]}})
db.orders.find({})
db.orders.find({customer:{$nin:["David Garcia","Linda Martinez"]}})
db.orders.find({items:{$nin:["Laptop","Mouse"]}})
db.products.find({})
db.products.find({color:{$nin:["white","black"]}})
db.products.find({price:{$nin:[599,899,799]}})

----------------------------------------------------
db.collectionName.find({key:{$eq:{Value}}}) << If any equal value exists in collections
db.collectionName.find({key:{$ne:{Value}}}) << Not equal to 
db.collectionName.find({key:{$gt:{value}}}) << number is greater than xx
db.collectionName.find({key:{$gte:{value}}}) <<< number is greater than equal to xxx
db.collectionName.find({key:{$lt:{value}}}) <<< number is less than xx
db.collectionName.find({key:{$lte:{value}}) <<< number is less than equal to xxx

db.collectionName.find({key:{$in:[value1,value2]}}) <<< show the collections that [valu1,value2] of array is  included
db.collectionName.find({key:{$nin:[value1,value2]}}) <<< show the collections that [value1,value2] of array is not included