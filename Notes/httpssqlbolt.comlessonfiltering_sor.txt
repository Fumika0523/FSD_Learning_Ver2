https://sqlbolt.com/lesson/filtering_sorting_query_results


Operator		Condition						SQL Example
=, !=, < <=, >, >=	Standard numerical operators				col_name != 4
BETWEEN … AND …		Number is within range of two values (inclusive)	col_name BETWEEN 1.5 AND 10.5
NOT BETWEEN … AND …	Number is not within range of two values (inclusive)	col_name NOT BETWEEN 1 AND 10
IN (…)			Number exists in a list					col_name IN (2, 4, 6)
NOT IN (…)		Number does not exist in a list				col_name NOT IN (1, 3, 5)


Exercise1:
SELECT Title  FROM movies;

-2:
SELECT Director  FROM movies;

-3:
SELECT Title, Director  FROM movies;

-4:
SELECT Title, Year FROM movies;

-5:
SELECT * FROM movies;


ex:2-1:
SELECT id, title FROM movies 
WHERE id = 6;

-2:
SELECT * FROM movies
WHERE YEAR BETWEEN 2000 AND 2010

-3:
SELECT * FROM MOVIES
WHERE NOT YEAR BETWEEN 2000 AND 2010

-4:
SELECT TITLE, YEAR FROM MOVIES
LIMIT 5
--4:Same result
SELECT TITLE, YEAR FROM MOVIES
WHERE ID BETWEEN 1 AND 5


ex-3-1:
SELECT * FROM movies
WHERE TITLE LIKE "%Toy Story%";

3-2:
SELECT * FROM MOVIES WHERE DIRECTOR="John Lasseter"
SELECT * FROM MOVIES WHERE DIRECTOR LIKE "%John Lasseter%"
SELECT * FROM MOVIES WHERE DIRECTOR IN("John Lasseter")

3-3:
SELECT * FROM MOVIES WHERE DIRECTOR!="John Lasseter"
SELECT * FROM MOVIES WHERE DIRECTOR NOT LIKE "%John Lasseter%"
SELECT * FROM MOVIES WHERE DIRECTOR NOT IN("John Lasseter")

3-4
SELECT * FROM MOVIES WHERE TITLE LIKE "%WALL%"
SELECT * FROM MOVIES WHERE TITLE LIKE "WALL-_"

------------------------------------
SELECT column, another_column, …
FROM mytable
WHERE condition(s)
ORDER BY column ASC/DESC
LIMIT num_limit OFFSET num_offset;
------------------------------------

4-1:
SELECT DISTINCT DIRECTOR FROM MOVIES ORDER BY DIRECTOR ASC

4-2:
SELECT * FROM MOVIES ORDER BY YEAR DESC LIMIT 4

4-3:
SELECT * FROM MOVIES ORDER BY TITLE ASC LIMIT 5

4-4:
SELECT * FROM MOVIES ORDER BY  TITLE ASC LIMIT 5 OFFSET 5

REVIEW:
1:
SELECT City,Population FROM NORTH_AMERICAN_CITIES WHERE Country = "Canada"

2:SELECT CITY FROM NORTH_AMERICAN_CITIES WHERE COUNTRY = "United States" ORDER BY
LATITUDE DESC

3:SELECT * FROM NORTH_AMERICAN_CITIES WHERE longitude <-87.629798 ORDER BY Longitude 

WEST OF CICAGO : longitude <-87.629798
NORTH TO SOUTH >>> LATITUDE
WEST TO EAST >>> LONGITUDE

4:SELECT CITY FROM NORTH_AMERICAN_CITIES WHERE COUNTRY = "Mexico" ORDER BY POPULATION DESC LIMIT 2

5:SELECT CITY FROM NORTH_AMERICAN_CITIES WHERE COUNTRY = "United States" ORDER BY POPULATION DESC LIMIT 2 OFFSET 2

SELECT column, another_table_column, …
FROM mytable
INNER JOIN another_table 
    ON mytable.id = another_table.id
WHERE condition(s)
ORDER BY column, … ASC/DESC
LIMIT num_limit OFFSET num_offset;


Ex-6
1:
SELECT Domestic_sales, International_sales, Title FROM Movies INNER JOIN BoxOffice ON  Movies.id = BoxOffice.Movie_id

2:
SELECT Title, Domestic_sales, International_sales FROM MOVIES Inner join BoxOffice ON MOVIES.ID = BOXOFFICE.MOVIE_ID WHERE INTERNATIONAL_SALES > DOMESTIC_SALES

3:
SELECT TITLE, RATING FROM MOVIES INNER JOIN BOXOFFICE ON MOVIES.ID = BOXOFFICE.Movie_id  ORDER BY RATING DESC

EX7:
1: 
SELECT DISTINCT BUILDING FROM EMPLOYEES 

2:
SELECT DISTINCT BUILDING_NAME, CAPACITY FROM BUILDINGS 

3: SELECT DISTINCT BUILDING_NAME, ROLE FROM BUILDINGS LEFT JOIN EMPLOYEES ON BUILDINGS.BUILDING_NAME = EMPLOYEES.BUILDING

EX8
1: SELECT * FROM EMPLOYEES WHERE  BUILDING IS NULL
---WHERE XX IS NUILL / IS NOT NULL
2:
SELECT BUILDING_NAME FROM BUILDINGS LEFT JOIN EMPLOYEES ON BUILDINGS.BUILDING_NAME=EMPLOYEES.BUILDING WHERE EMPLOYEES.BUILDING IS NULL

EX9:
1:
SELECT DISTINCT TITLE,(Domestic_sales + 	International_sales)/1000000 AS TOTAL_SALES
FROM MOVIES
INNER JOIN BOXOFFICE
ON MOVIES.ID = BOXOFFICE.MOVIE_ID;

2:
SELECT DISTINCT TITLE,(RATING*10) AS RATING_PERCENT FROM MOVIES INNER JOIN BOXOFFICE ON MOVIES.ID=BOXOFFICE.MOVIE_ID

3:
SELECT * FROM MOVIES WHERE YEAR%2==0

Ex:10
1-
SELECT MAX(years_employed) as Max_years_employed
FROM employees;

2- insert into boxoffice (Movie_id,Rating,Domestic_sales, International_sales) values (16,8,140000000,170000000)

ex:11- delete
1-
DELETE from movies where year <2005

2-
delete from movies where director = "Andrew Stanton"

UPDATE:
1- 
Update movies
set director=" John Lasseter"
Where title = " A Bug's Life";

2-update movies
set Year=1999
where title="Toy Story 2"

3-
update movies
Set Title = "Toy Story 3", Director="Lee Unkrich"
Where title = "Toy Story 8", 

Ex16
CREATE TABLE Database (
name varchar(10),version float,download_count  int);

Update statement with values
UPDATE mytable
SET column = value_or_expr, 
    other_column = another_value_or_expr, 
    …
WHERE condition;



